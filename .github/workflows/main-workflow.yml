name: CI/CD Pipeline
on:
  pull_request:
    branches: [ main, nightly ]
  schedule:
    - cron: '0 0 * * *' 
  push:
    branches: [ main ]
permissions:
  contents: write
  pull-requests: read
jobs:

  build-and-test:
    if: |
      (github.event_name == 'pull_request' && github.base_ref == 'nightly') || 
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'schedule' && 'nightly' || github.ref }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Set up environment
        run: |
          npm install
          cd server
          npm install
          cd ../client
          npm install
      - name: Build
        run: |
          node --loader ts-node/esm build.ts
      - name: Run unit tests
        run: |
          npm run test:unit
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            server/dist/
            server/public/
            client/dist/
            
  nightly-integration:
    needs: build-and-test
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: nightly
          fetch-depth: 0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Set up environment for integration tests
        run: |
          npm install
          cd server
          npm install
          cd ../client
          npm install
      - name: Restore artifacts to correct locations
        run: |
          cp -r dist/server/dist/* server/dist/ 2>/dev/null || true
          cp -r dist/server/public/* server/public/ 2>/dev/null || true
          cp -r dist/client/dist/* client/dist/ 2>/dev/null || true
      - name: Run integration tests
        run: |
          npm run test:integration
      - name: Merge nightly to main
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git remote set-url origin https://x-access-token:${{ secrets.BOT_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin main
          git checkout main
          git merge --no-ff nightly -m "Auto-merge nightly to main [$(date)]"
          git push origin main
          
  deploy-production:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/
      - name: Deploy to production
        run: |
          # TODO add production deployment commands for GKE
          echo "Deploying to production..."
