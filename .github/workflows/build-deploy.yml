name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          npm install
          cd server && npm install
          cd ../client && npm install

      - name: Build application
        run: |
          echo "=== BUILDING APPLICATION ==="
          node --loader ts-node/esm build.ts
          
          echo "=== VERIFYING BUILD ==="
          echo "server/dist:"
          ls -la server/dist/
          echo "server/public:"
          ls -la server/public/

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          echo "=== BUILDING DOCKER IMAGE ==="
          docker build --platform linux/amd64 \
            --build-arg DB_HOST="${{ secrets.DB_HOST }}" \
            --build-arg DB_NAME="${{ secrets.DB_NAME }}" \
            --build-arg DB_USER="${{ secrets.DB_USER }}" \
            --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg NODE_ENV="production" \
            -t hearts-game-server .
          
          echo "=== PUSHING TO REGISTRY ==="
          docker tag hearts-game-server gcr.io/${{ secrets.GKE_PROJECT }}/hearts-game-server:${{ github.sha }}
          docker push gcr.io/${{ secrets.GKE_PROJECT }}/hearts-game-server:${{ github.sha }}

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone=${{ secrets.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          echo "=== DEPLOYING TO KUBERNETES ==="
          
          # Update secrets
          kubectl delete secret hearts-app-secrets --ignore-not-found=true
          kubectl create secret generic hearts-app-secrets \
            --from-literal=DB_HOST="${{ secrets.DB_HOST }}" \
            --from-literal=DB_NAME="${{ secrets.DB_NAME }}" \
            --from-literal=DB_USER="${{ secrets.DB_USER }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --from-literal=JWT_SECRET="${{ secrets.JWT_SECRET }}"
          
          # Apply configurations
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml
          
          # Update deployment with new image
          kubectl set image deployment/hearts-game-deployment hearts-game-server=gcr.io/${{ secrets.GKE_PROJECT }}/hearts-game-server:${{ github.sha }}
          
          # Wait for rollout to complete
          kubectl rollout status deployment/hearts-game-deployment
          
          echo "=== DEPLOYMENT COMPLETE ==="
          kubectl get pods -l app=hearts-game
